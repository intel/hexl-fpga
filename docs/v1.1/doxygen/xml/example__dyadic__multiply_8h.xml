<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="example__dyadic__multiply_8h" kind="file">
    <compoundname>example_dyadic_multiply.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">vector</includes>
    <includedby refid="example__dyadic__multiply_8cpp" local="yes">example_dyadic_multiply.cpp</includedby>
    <includedby refid="examples_8cpp" local="yes">examples.cpp</includedby>
    <incdepgraph>
      <node id="46">
        <label>cstdint</label>
      </node>
      <node id="47">
        <label>vector</label>
      </node>
      <node id="45">
        <label>example_dyadic_multiply.h</label>
        <link refid="example_dyadic_multiply.h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="49">
        <label>example_dyadic_multiply.cpp</label>
        <link refid="example__dyadic__multiply_8cpp"/>
      </node>
      <node id="50">
        <label>examples.cpp</label>
        <link refid="examples_8cpp"/>
      </node>
      <node id="48">
        <label>example_dyadic_multiply.h</label>
        <link refid="example_dyadic_multiply.h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classexample__dyadic__multiply" prot="public">example_dyadic_multiply</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2020-2021<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__EXAMPLE_DYADIC_MULTIPLY_H__</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__EXAMPLE_DYADIC_MULTIPLY_H__</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classexample__dyadic__multiply" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classexample__dyadic__multiply" kindref="compound">example_dyadic_multiply</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classexample__dyadic__multiply_1a0816be553ba8877e38dd37edf5d166be" kindref="member">setup_dyadic_multiply</ref>(uint64_t<sp/><ref refid="bench__dyadic__multiply_8cpp_1a1249f7c009d650067cdc1e2254fcb63c" kindref="member">n_dyadic_multiply</ref>,<sp/>uint64_t<sp/><ref refid="bench__dyadic__multiply_8cpp_1a94cbf59cad79634589387a30784ed78d" kindref="member">num_moduli</ref>,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>coeff_count);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classexample__dyadic__multiply_1a1f21e56107b4fc4f522fd59ecc0f3697" kindref="member">execute_dyadic_multiply</ref>(std::vector&lt;uint64_t&gt;&amp;<sp/><ref refid="bench__dyadic__multiply_8cpp_1a9df79bfc3d20b59bcaf8d6721d1b8b82" kindref="member">out</ref>,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>n_dyadic_multiply,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>num_moduli,<sp/>uint64_t<sp/>coeff_count);</highlight></codeline>
<codeline lineno="37" refid="classexample__dyadic__multiply_1a11ae693700a81cd88fdc75be651f2048" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;&amp;<sp/><ref refid="classexample__dyadic__multiply_1a11ae693700a81cd88fdc75be651f2048" kindref="member">exp_output</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exp_out;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/>moduli;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/>op1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/>op2;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/>exp_out;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/disk1/ymeng12/hexl-fpga/examples/example_dyadic_multiply.h"/>
  </compounddef>
</doxygen>
