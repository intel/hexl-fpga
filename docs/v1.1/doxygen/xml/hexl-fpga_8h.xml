<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="hexl-fpga_8h" kind="file">
    <compoundname>hexl-fpga.h</compoundname>
    <includes local="no">cstdint</includes>
    <includedby refid="example__dyadic__multiply_8cpp" local="yes">example_dyadic_multiply.cpp</includedby>
    <includedby refid="examples_8cpp" local="yes">examples.cpp</includedby>
    <includedby refid="tests_2fpga__context_8h" local="yes">fpga_context.h</includedby>
    <includedby refid="test__dyadic__multiply_8cpp" local="yes">test_dyadic_multiply.cpp</includedby>
    <includedby refid="test__dyadic__multiply__keyswitch_8cpp" local="yes">test_dyadic_multiply_keyswitch.cpp</includedby>
    <includedby refid="test__fwd__ntt_8cpp" local="yes">test_fwd_ntt.cpp</includedby>
    <includedby refid="test__inv__ntt_8cpp" local="yes">test_inv_ntt.cpp</includedby>
    <includedby refid="test__keyswitch_8cpp" local="yes">test_keyswitch.cpp</includedby>
    <includedby refid="bench__dyadic__multiply_8cpp" local="yes">bench_dyadic_multiply.cpp</includedby>
    <includedby refid="bench__fwd__ntt_8cpp" local="yes">bench_fwd_ntt.cpp</includedby>
    <includedby refid="bench__inv__ntt_8cpp" local="yes">bench_inv_ntt.cpp</includedby>
    <includedby refid="bench__keyswitch_8cpp" local="yes">bench_keyswitch.cpp</includedby>
    <includedby refid="benchmark_2main_8cpp" local="yes">main.cpp</includedby>
    <incdepgraph>
      <node id="81">
        <label>hexl-fpga.h</label>
        <link refid="hexl-fpga.h"/>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>cstdint</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="94">
        <label>bench_fwd_ntt.cpp</label>
        <link refid="bench__fwd__ntt_8cpp"/>
      </node>
      <node id="95">
        <label>bench_inv_ntt.cpp</label>
        <link refid="bench__inv__ntt_8cpp"/>
      </node>
      <node id="83">
        <label>hexl-fpga.h</label>
        <link refid="hexl-fpga.h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>test_dyadic_multiply_keyswitch.cpp</label>
        <link refid="test__dyadic__multiply__keyswitch_8cpp"/>
      </node>
      <node id="88">
        <label>test_dyadic_multiply.cpp</label>
        <link refid="test__dyadic__multiply_8cpp"/>
      </node>
      <node id="96">
        <label>bench_keyswitch.cpp</label>
        <link refid="bench__keyswitch_8cpp"/>
      </node>
      <node id="90">
        <label>test_fwd_ntt.cpp</label>
        <link refid="test__fwd__ntt_8cpp"/>
      </node>
      <node id="97">
        <label>main.cpp</label>
        <link refid="benchmark_2main_8cpp"/>
      </node>
      <node id="91">
        <label>test_inv_ntt.cpp</label>
        <link refid="test__inv__ntt_8cpp"/>
      </node>
      <node id="84">
        <label>example_dyadic_multiply.cpp</label>
        <link refid="example__dyadic__multiply_8cpp"/>
      </node>
      <node id="85">
        <label>examples.cpp</label>
        <link refid="examples_8cpp"/>
      </node>
      <node id="86">
        <label>fpga_context.h</label>
        <link refid="tests_2fpga__context_8h"/>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>test_keyswitch.cpp</label>
        <link refid="test__keyswitch_8cpp"/>
      </node>
      <node id="93">
        <label>bench_dyadic_multiply.cpp</label>
        <link refid="bench__dyadic__multiply_8cpp"/>
      </node>
      <node id="87">
        <label>main.cpp</label>
        <link refid="tests_2main_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceintel">intel</innernamespace>
    <innernamespace refid="namespaceintel_1_1hexl">intel::hexl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2020-2021<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__HEXL_FPGA_H__</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__HEXL_FPGA_H__</highlight></codeline>
<codeline lineno="6"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">intel<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hexl<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a6236e14eaac1602475c5f4e0a42754fe" kindref="member">acquire_FPGA_resources</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a717589c6dbfa6429b61e42c620d72d89" kindref="member">release_FPGA_resources</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DyadicMultiply<sp/>Section</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a0721fea3151425a86da2201107e3ddcc" kindref="member">set_worksize_DyadicMultiply</ref>(uint64_t<sp/>ws);</highlight></codeline>
<codeline lineno="41"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1ae4e26f2cb97a43a2b81fe8643b6edf17" kindref="member">DyadicMultiply</ref>(uint64_t*<sp/>results,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>operand1,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>operand2,<sp/>uint64_t<sp/>n,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>moduli,<sp/>uint64_t<sp/>n_moduli);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a638ef00009ae573955d1138b9fb03363" kindref="member">DyadicMultiplyCompleted</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KeySwitch<sp/>Section</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a8ac8866d0693f8fc89f99a9197cd04cf" kindref="member">set_worksize_KeySwitch</ref>(uint64_t<sp/>ws);</highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1aafddb377dcb2c351cfc3e014428cfe42" kindref="member">KeySwitch</ref>(uint64_t*<sp/>result,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>t_target_iter_ptr,<sp/>uint64_t<sp/>n,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>decomp_modulus_size,<sp/>uint64_t<sp/>key_modulus_size,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>rns_modulus_size,<sp/>uint64_t<sp/>key_component_count,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>moduli,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t**<sp/>k_switch_keys,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>modswitch_factors,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>twiddle_factors<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1ad36db7f99d2e70414645f961b723ab79" kindref="member">KeySwitchCompleted</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WARNING:<sp/>The<sp/>following<sp/>NTT<sp/>and<sp/>INTT<sp/>related<sp/>APIs<sp/>are<sp/>deprecated<sp/>since</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>version<sp/>1.1.<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="94"><highlight class="comment"></highlight><highlight class="comment">//<sp/>NTT<sp/>Section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">[[deprecated]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1aeaae249dd080bb7cb40aea745c3df207" kindref="member">_set_worksize_NTT</ref>(uint64_t<sp/>ws);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">[[deprecated]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a8d7f5d51e5d7683ea691f86ef57d2c40" kindref="member">_NTT</ref>(uint64_t*<sp/>operand,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>root_of_unity_powers,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>precon_root_of_unity_powers,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>coeff_modulus,<sp/>uint64_t<sp/>n);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">[[deprecated]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a410ec4dc67583d07f4f7d1c1000c24e0" kindref="member">_NTTCompleted</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTT<sp/>Section</highlight></codeline>
<codeline lineno="132"><highlight class="comment"></highlight><highlight class="normal">[[deprecated]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1afc56a7a0c0870b87c5445de89a0fce81" kindref="member">_set_worksize_INTT</ref>(uint64_t<sp/>ws);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">[[deprecated]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a69f85dd306cce099d7d68dfd3567bd3c" kindref="member">_INTT</ref>(uint64_t*<sp/>operand,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>inv_root_of_unity_powers,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>precon_inv_root_of_unity_powers,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>coeff_modulus,<sp/>uint64_t<sp/>inv_n,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>inv_n_w,<sp/>uint64_t<sp/>n);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">[[deprecated]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1aea83cf5603f96ba86ad15d99d997fe49" kindref="member">_INTTCompleted</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hexl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>intel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/disk1/ymeng12/hexl-fpga/host/inc/hexl-fpga.h"/>
  </compounddef>
</doxygen>
