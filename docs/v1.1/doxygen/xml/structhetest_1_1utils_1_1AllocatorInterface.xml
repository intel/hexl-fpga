<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="structhetest_1_1utils_1_1AllocatorInterface" kind="struct" prot="public">
    <compoundname>hetest::utils::AllocatorInterface</compoundname>
    <basecompoundref refid="structhetest_1_1utils_1_1AllocatorBase" prot="public" virt="non-virtual">hetest::utils::AllocatorBase</basecompoundref>
    <includes refid="utils-test_8hpp" local="no">utils-test.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>AllocatorImpl</declname>
        <defname>AllocatorImpl</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhetest_1_1utils_1_1AllocatorInterface_1aa155e501b1e16984f8da9b1837597e66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void *</type>
        <definition>void* hetest::utils::AllocatorInterface&lt; AllocatorImpl &gt;::allocate</definition>
        <argsstring>(size_t bytes_count) override</argsstring>
        <name>allocate</name>
        <reimplements refid="structhetest_1_1utils_1_1AllocatorBase_1aa179ce655f57197104fce71166c17374">allocate</reimplements>
        <param>
          <type>size_t</type>
          <declname>bytes_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/disk1/ymeng12/hexl-fpga/tests/test_utils/utils-test.hpp" line="204" column="1" bodyfile="/disk1/ymeng12/hexl-fpga/tests/test_utils/utils-test.hpp" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="structhetest_1_1utils_1_1AllocatorInterface_1a2d76269d7edd0d9cb65e6bfeffc24432" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void hetest::utils::AllocatorInterface&lt; AllocatorImpl &gt;::deallocate</definition>
        <argsstring>(void *p, size_t n) override</argsstring>
        <name>deallocate</name>
        <reimplements refid="structhetest_1_1utils_1_1AllocatorBase_1ab9e3d2285da2861d0939afe26c6683e4">deallocate</reimplements>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/disk1/ymeng12/hexl-fpga/tests/test_utils/utils-test.hpp" line="207" column="1" bodyfile="/disk1/ymeng12/hexl-fpga/tests/test_utils/utils-test.hpp" bodystart="207" bodyend="209"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structhetest_1_1utils_1_1AllocatorInterface_1a30ed5512c104da383e8a8be13527c884" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* hetest::utils::AllocatorInterface&lt; AllocatorImpl &gt;::allocate_impl</definition>
        <argsstring>(size_t bytes_count)</argsstring>
        <name>allocate_impl</name>
        <param>
          <type>size_t</type>
          <declname>bytes_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/disk1/ymeng12/hexl-fpga/tests/test_utils/utils-test.hpp" line="214" column="1" bodyfile="/disk1/ymeng12/hexl-fpga/tests/test_utils/utils-test.hpp" bodystart="214" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="structhetest_1_1utils_1_1AllocatorInterface_1a20e5b6ceb7c60db6f78af5f5ba40db0a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hetest::utils::AllocatorInterface&lt; AllocatorImpl &gt;::deallocate_impl</definition>
        <argsstring>(void *p, size_t n)</argsstring>
        <name>deallocate_impl</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/disk1/ymeng12/hexl-fpga/tests/test_utils/utils-test.hpp" line="219" column="1" bodyfile="/disk1/ymeng12/hexl-fpga/tests/test_utils/utils-test.hpp" bodystart="219" bodyend="223"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structhetest_1_1utils_1_1AllocatorInterface_1a4d652f074ac56f53e7ddf40e7ce1c3c5" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>error_code</declname>
            <defname>error_code</defname>
          </param>
        </templateparamlist>
        <type>constexpr int</type>
        <definition>static constexpr int hetest::utils::AllocatorInterface&lt; AllocatorImpl &gt;::fail_message</definition>
        <argsstring>()</argsstring>
        <name>fail_message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/disk1/ymeng12/hexl-fpga/tests/test_utils/utils-test.hpp" line="227" column="1" bodyfile="/disk1/ymeng12/hexl-fpga/tests/test_utils/utils-test.hpp" bodystart="227" bodyend="237"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="16">
        <label>hetest::utils::AllocatorInterface&lt; AllocatorImpl &gt;</label>
        <link refid="structhetest_1_1utils_1_1AllocatorInterface"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>hetest::utils::AllocatorBase</label>
        <link refid="structhetest_1_1utils_1_1AllocatorBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18">
        <label>hetest::utils::AllocatorInterface&lt; AllocatorImpl &gt;</label>
        <link refid="structhetest_1_1utils_1_1AllocatorInterface"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>hetest::utils::AllocatorBase</label>
        <link refid="structhetest_1_1utils_1_1AllocatorBase"/>
      </node>
    </collaborationgraph>
    <location file="/disk1/ymeng12/hexl-fpga/tests/test_utils/utils-test.hpp" line="202" column="1" bodyfile="/disk1/ymeng12/hexl-fpga/tests/test_utils/utils-test.hpp" bodystart="202" bodyend="238"/>
    <listofallmembers>
      <member refid="structhetest_1_1utils_1_1AllocatorInterface_1aa155e501b1e16984f8da9b1837597e66" prot="public" virt="virtual"><scope>hetest::utils::AllocatorInterface</scope><name>allocate</name></member>
      <member refid="structhetest_1_1utils_1_1AllocatorInterface_1a30ed5512c104da383e8a8be13527c884" prot="private" virt="non-virtual"><scope>hetest::utils::AllocatorInterface</scope><name>allocate_impl</name></member>
      <member refid="structhetest_1_1utils_1_1AllocatorInterface_1a2d76269d7edd0d9cb65e6bfeffc24432" prot="public" virt="virtual"><scope>hetest::utils::AllocatorInterface</scope><name>deallocate</name></member>
      <member refid="structhetest_1_1utils_1_1AllocatorInterface_1a20e5b6ceb7c60db6f78af5f5ba40db0a" prot="private" virt="non-virtual"><scope>hetest::utils::AllocatorInterface</scope><name>deallocate_impl</name></member>
      <member refid="structhetest_1_1utils_1_1AllocatorInterface_1a4d652f074ac56f53e7ddf40e7ce1c3c5" prot="private" virt="non-virtual"><scope>hetest::utils::AllocatorInterface</scope><name>fail_message</name></member>
      <member refid="structhetest_1_1utils_1_1AllocatorBase_1a8b16ff8d74578e0162706b8bbfa3751a" prot="public" virt="virtual"><scope>hetest::utils::AllocatorInterface</scope><name>~AllocatorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
