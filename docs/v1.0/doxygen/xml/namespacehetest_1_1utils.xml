<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="namespacehetest_1_1utils" kind="namespace">
    <compoundname>hetest::utils</compoundname>
    <innerclass refid="classhetest_1_1utils_1_1MultiplyFactor" prot="public">hetest::utils::MultiplyFactor</innerclass>
    <innerclass refid="classhetest_1_1utils_1_1NTT" prot="public">hetest::utils::NTT</innerclass>
    <innerclass refid="structhetest_1_1utils_1_1AllocatorBase" prot="public">hetest::utils::AllocatorBase</innerclass>
    <innerclass refid="structhetest_1_1utils_1_1AllocatorInterface" prot="public">hetest::utils::AllocatorInterface</innerclass>
    <innerclass refid="classhetest_1_1utils_1_1AlignedAllocator" prot="public">hetest::utils::AlignedAllocator</innerclass>
    <innernamespace refid="namespacehetest_1_1utils_1_1details">hetest::utils::details</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0" prot="public" static="no">
        <name>StimulusType</name>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0ab44049cb8c478c10943b85c673d1aa6c" prot="public">
          <name>RANDOM</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0acb6d3aaabe220e808c4ebe7a4f75cba3" prot="public">
          <name>RAMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0aa4357d286213142b9b8696ef0af5ee53" prot="public">
          <name>ALL_ONES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0abd0329a88df648015ad6e091cc1f07e2" prot="public">
          <name>ALL_ZEROS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0adc03ed02b009ff90c33cda86a886f525" prot="public">
          <name>IMPULSE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0a6574fd7efebbe5bb808fd5eb3ce8e519" prot="public">
          <name>ALL_MAX_VALUES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0a40004988ff05dc31725e4a31ddd18006" prot="public">
          <name>ALL_MIN_VALUES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0ab44049cb8c478c10943b85c673d1aa6c" prot="public">
          <name>RANDOM</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0acb6d3aaabe220e808c4ebe7a4f75cba3" prot="public">
          <name>RAMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0aa4357d286213142b9b8696ef0af5ee53" prot="public">
          <name>ALL_ONES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0abd0329a88df648015ad6e091cc1f07e2" prot="public">
          <name>ALL_ZEROS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0adc03ed02b009ff90c33cda86a886f525" prot="public">
          <name>IMPULSE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0a6574fd7efebbe5bb808fd5eb3ce8e519" prot="public">
          <name>ALL_MAX_VALUES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0a40004988ff05dc31725e4a31ddd18006" prot="public">
          <name>ALL_MIN_VALUES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_fwd_ntt.cpp" line="15" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_fwd_ntt.cpp" bodystart="15" bodyend="23"/>
      </memberdef>
      <memberdef kind="enum" id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0" prot="public" static="no">
        <name>StimulusType</name>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0ab44049cb8c478c10943b85c673d1aa6c" prot="public">
          <name>RANDOM</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0acb6d3aaabe220e808c4ebe7a4f75cba3" prot="public">
          <name>RAMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0aa4357d286213142b9b8696ef0af5ee53" prot="public">
          <name>ALL_ONES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0abd0329a88df648015ad6e091cc1f07e2" prot="public">
          <name>ALL_ZEROS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0adc03ed02b009ff90c33cda86a886f525" prot="public">
          <name>IMPULSE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0a6574fd7efebbe5bb808fd5eb3ce8e519" prot="public">
          <name>ALL_MAX_VALUES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0a40004988ff05dc31725e4a31ddd18006" prot="public">
          <name>ALL_MIN_VALUES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0ab44049cb8c478c10943b85c673d1aa6c" prot="public">
          <name>RANDOM</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0acb6d3aaabe220e808c4ebe7a4f75cba3" prot="public">
          <name>RAMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0aa4357d286213142b9b8696ef0af5ee53" prot="public">
          <name>ALL_ONES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0abd0329a88df648015ad6e091cc1f07e2" prot="public">
          <name>ALL_ZEROS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0adc03ed02b009ff90c33cda86a886f525" prot="public">
          <name>IMPULSE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0a6574fd7efebbe5bb808fd5eb3ce8e519" prot="public">
          <name>ALL_MAX_VALUES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0a40004988ff05dc31725e4a31ddd18006" prot="public">
          <name>ALL_MIN_VALUES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_inv_ntt.cpp" line="16" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_inv_ntt.cpp" bodystart="16" bodyend="24"/>
      </memberdef>
      <memberdef kind="enum" id="namespacehetest_1_1utils_1ac7fa0c35a418955522dc45b10864fdc8" prot="public" static="no">
        <name>CMPINT</name>
        <enumvalue id="namespacehetest_1_1utils_1ac7fa0c35a418955522dc45b10864fdc8a2dcbad7477fd40561e8b8198f173bd47" prot="public">
          <name>EQ</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Equal. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1ac7fa0c35a418955522dc45b10864fdc8ac562607189d77eb9dfb707464c1e7b0b" prot="public">
          <name>LT</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Less than. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1ac7fa0c35a418955522dc45b10864fdc8acfe6055d2e0503be378bb63449ec7ba6" prot="public">
          <name>LE</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Less than or equal. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1ac7fa0c35a418955522dc45b10864fdc8a946003f97ccc52d5d3b54ac0ec31bbfc" prot="public">
          <name>FALSE</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>False. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1ac7fa0c35a418955522dc45b10864fdc8adc33066c3993e0d50896e533fd692ce0" prot="public">
          <name>NE</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Not equal. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1ac7fa0c35a418955522dc45b10864fdc8ad7d6a13c7b311ec8a3c9fcfb1919a2f8" prot="public">
          <name>NLT</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>Not less than. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1ac7fa0c35a418955522dc45b10864fdc8aacd748f300c5d189c47807e2a9d6ea57" prot="public">
          <name>NLE</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>Not less than or equal. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacehetest_1_1utils_1ac7fa0c35a418955522dc45b10864fdc8ac0d83f0b82a6b30de8811e69e6d95c61" prot="public">
          <name>TRUE</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>True. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents binary operations between two boolean values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="26" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="26" bodyend="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacehetest_1_1utils_1a3f7f347b9f62a88014bdcc45f7987846" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="structhetest_1_1utils_1_1AllocatorBase" kindref="compound">AllocatorBase</ref> &gt;</type>
        <definition>using hetest::utils::AllocatorStrategyPtr = typedef std::shared_ptr&lt;AllocatorBase&gt;</definition>
        <argsstring></argsstring>
        <name>AllocatorStrategyPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="277" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacehetest_1_1utils_1ad5b6a78d49dc8f6790f7fd2b10bf3db0" prot="public" static="no">
        <type>std::vector&lt; T, <ref refid="classhetest_1_1utils_1_1AlignedAllocator" kindref="compound">AlignedAllocator</ref>&lt; T, 64 &gt; &gt;</type>
        <definition>using hetest::utils::AlignedVector64 = typedef std::vector&lt;T, AlignedAllocator&lt;T, 64&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>AlignedVector64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="352" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="352" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacehetest_1_1utils_1ac87aad4fed0f78704edd9639dcc44e03" prot="public" static="no" mutable="no">
        <type><ref refid="namespacehetest_1_1utils_1a3f7f347b9f62a88014bdcc45f7987846" kindref="member">AllocatorStrategyPtr</ref></type>
        <definition>AllocatorStrategyPtr hetest::utils::mallocStrategy</definition>
        <argsstring></argsstring>
        <name>mallocStrategy</name>
        <initializer>=
    <ref refid="namespacehetest_1_1utils_1a3f7f347b9f62a88014bdcc45f7987846" kindref="member">AllocatorStrategyPtr</ref>(new <ref refid="structhetest_1_1utils_1_1details_1_1MallocStrategy" kindref="compound">details::MallocStrategy</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="255" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacehetest_1_1utils_1ad48ead8c11fed0f359691fbe9e3478d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void hetest::utils::genStimulusForNTT</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;inVec, T prime, StimulusType stimulusType)</argsstring>
        <name>genStimulusForNTT</name>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>inVec</declname>
        </param>
        <param>
          <type>T</type>
          <declname>prime</declname>
        </param>
        <param>
          <type><ref refid="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0" kindref="member">StimulusType</ref></type>
          <declname>stimulusType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_fwd_ntt.cpp" line="25" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_fwd_ntt.cpp" bodystart="25" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1ad48ead8c11fed0f359691fbe9e3478d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void hetest::utils::genStimulusForNTT</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;inVec, T prime, StimulusType stimulusType)</argsstring>
        <name>genStimulusForNTT</name>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>inVec</declname>
        </param>
        <param>
          <type>T</type>
          <declname>prime</declname>
        </param>
        <param>
          <type><ref refid="namespacehetest_1_1utils_1a17ac57eb86d3ead191cb51163ef63eb0" kindref="member">StimulusType</ref></type>
          <declname>stimulusType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_inv_ntt.cpp" line="26" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_inv_ntt.cpp" bodystart="26" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a3f409e865de8022c3ea069458b3913d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::InverseUIntMod</definition>
        <argsstring>(uint64_t input, uint64_t modulus)</argsstring>
        <name>InverseUIntMod</name>
        <param>
          <type>uint64_t</type>
          <declname>input</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="14" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="14" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1aa75d1b0f92c493fb35ee0fba2ad20861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::BarrettReduce64</definition>
        <argsstring>(uint64_t input, uint64_t modulus, uint64_t q_barr)</argsstring>
        <name>BarrettReduce64</name>
        <param>
          <type>uint64_t</type>
          <declname>input</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>q_barr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="45" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a7e1e09f25d4ed5c4b8ed51fd0e7831e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::MultiplyUIntMod</definition>
        <argsstring>(uint64_t x, uint64_t y, uint64_t modulus)</argsstring>
        <name>MultiplyUIntMod</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="52" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="52" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a05ab63c2edf76c87493770c59b9fbdde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::MultiplyMod</definition>
        <argsstring>(uint64_t x, uint64_t y, uint64_t y_precon, uint64_t modulus)</argsstring>
        <name>MultiplyMod</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y_precon</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="62" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="62" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a2703d3db0db5510fac010b973ef9abdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::AddUIntMod</definition>
        <argsstring>(uint64_t x, uint64_t y, uint64_t modulus)</argsstring>
        <name>AddUIntMod</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="69" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a3ed335150e26cfd368e40a34e3af2f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::SubUIntMod</definition>
        <argsstring>(uint64_t x, uint64_t y, uint64_t modulus)</argsstring>
        <name>SubUIntMod</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="76" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1af4225e8fb310a252be626d55547299a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::PowMod</definition>
        <argsstring>(uint64_t base, uint64_t exp, uint64_t modulus)</argsstring>
        <name>PowMod</name>
        <param>
          <type>uint64_t</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="84" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="84" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1ae86c27a5d75d8b02cfb9b17eae7251a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hetest::utils::IsPrimitiveRoot</definition>
        <argsstring>(uint64_t root, uint64_t degree, uint64_t modulus)</argsstring>
        <name>IsPrimitiveRoot</name>
        <param>
          <type>uint64_t</type>
          <declname>root</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="99" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="99" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1ab90a6b556a35edc30cdef194aefad1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::GeneratePrimitiveRoot</definition>
        <argsstring>(uint64_t degree, uint64_t modulus)</argsstring>
        <name>GeneratePrimitiveRoot</name>
        <param>
          <type>uint64_t</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="111" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="111" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a1f9bf85bb99c3f6d6b9a72c3c2e85d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::MinimalPrimitiveRoot</definition>
        <argsstring>(uint64_t degree, uint64_t modulus)</argsstring>
        <name>MinimalPrimitiveRoot</name>
        <param>
          <type>uint64_t</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="137" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="137" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1af9582ceaf67142fca2879962168298f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::ReverseBitsUInt</definition>
        <argsstring>(uint64_t x, uint64_t bit_width)</argsstring>
        <name>ReverseBitsUInt</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>bit_width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="160" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="160" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a406b9fa0a830692fe69b04d2e9023858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hetest::utils::IsPrime</definition>
        <argsstring>(uint64_t n)</argsstring>
        <name>IsPrime</name>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="173" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="173" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1aa12bfb4bcbbd50266e460de87ee58cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; uint64_t &gt;</type>
        <definition>std::vector&lt; uint64_t &gt; hetest::utils::GeneratePrimes</definition>
        <argsstring>(size_t num_primes, size_t bit_size, size_t ntt_size)</argsstring>
        <name>GeneratePrimes</name>
        <param>
          <type>size_t</type>
          <declname>num_primes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bit_size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ntt_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="221" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="221" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a603d76eecc147f0388bfd3d4ed56a80e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hetest::utils::ForwardTransformToBitReverse64</definition>
        <argsstring>(uint64_t *operand, uint64_t n, uint64_t modulus, const uint64_t *root_of_unity_powers, const uint64_t *precon_root_of_unity_powers, uint64_t input_mod_factor, uint64_t output_mod_factor)</argsstring>
        <name>ForwardTransformToBitReverse64</name>
        <param>
          <type>uint64_t *</type>
          <declname>operand</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <param>
          <type>const uint64_t *</type>
          <declname>root_of_unity_powers</declname>
        </param>
        <param>
          <type>const uint64_t *</type>
          <declname>precon_root_of_unity_powers</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>input_mod_factor</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>output_mod_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="474" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="474" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a17097893112c25d41b68a2469e348c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hetest::utils::ReferenceForwardTransformToBitReverse</definition>
        <argsstring>(uint64_t *operand, uint64_t n, uint64_t modulus, const uint64_t *root_of_unity_powers)</argsstring>
        <name>ReferenceForwardTransformToBitReverse</name>
        <param>
          <type>uint64_t *</type>
          <declname>operand</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <param>
          <type>const uint64_t *</type>
          <declname>root_of_unity_powers</declname>
        </param>
        <briefdescription>
<para>Reference <ref refid="classhetest_1_1utils_1_1NTT" kindref="compound">NTT</ref> which is written for clarity rather than performance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">operand</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data. Overwritten with <ref refid="classhetest_1_1utils_1_1NTT" kindref="compound">NTT</ref> output </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the transfrom, i.e. the polynomial degree. Must be a power of two. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">modulus</parametername>
</parameternamelist>
<parameterdescription>
<para>Prime modulus. Must satisfy q == 1 mod 2n </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">root_of_unity_powers</parametername>
</parameternamelist>
<parameterdescription>
<para>Powers of 2n&apos;th root of unity in F_q. In bit-reversed order </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="550" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="550" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1aab875bdc62d230db2837749ab27c3f4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hetest::utils::InverseTransformFromBitReverse64</definition>
        <argsstring>(uint64_t *operand, uint64_t n, uint64_t modulus, const uint64_t *inv_root_of_unity_powers, const uint64_t *precon_inv_root_of_unity_powers, uint64_t input_mod_factor, uint64_t output_mod_factor)</argsstring>
        <name>InverseTransformFromBitReverse64</name>
        <param>
          <type>uint64_t *</type>
          <declname>operand</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <param>
          <type>const uint64_t *</type>
          <declname>inv_root_of_unity_powers</declname>
        </param>
        <param>
          <type>const uint64_t *</type>
          <declname>precon_inv_root_of_unity_powers</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>input_mod_factor</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>output_mod_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="580" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="580" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1af721dbd58c61bb7b9220c8bb315488a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hetest::utils::CheckNTTArguments</definition>
        <argsstring>(uint64_t degree, uint64_t modulus)</argsstring>
        <name>CheckNTTArguments</name>
        <param>
          <type>uint64_t</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" line="661" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.cpp" bodystart="661" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1af874c3ebc0c27f720a19c5f8e4ea288c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>BitShift</declname>
            <defname>BitShift</defname>
          </param>
        </templateparamlist>
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::MultiplyUIntModLazy</definition>
        <argsstring>(uint64_t x, uint64_t y_operand, uint64_t y_barrett_factor, uint64_t modulus)</argsstring>
        <name>MultiplyUIntModLazy</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y_operand</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y_barrett_factor</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.hpp" line="87" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.hpp" bodystart="87" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a6d381530e44b937b604ee7f44c841a21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>BitShift</declname>
            <defname>BitShift</defname>
          </param>
        </templateparamlist>
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::MultiplyUIntModLazy</definition>
        <argsstring>(uint64_t x, uint64_t y, uint64_t modulus)</argsstring>
        <name>MultiplyUIntModLazy</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.hpp" line="105" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.hpp" bodystart="105" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a04c97740b30cea22b4dff98f4c13dc89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char hetest::utils::AddUInt64</definition>
        <argsstring>(uint64_t operand1, uint64_t operand2, uint64_t *result)</argsstring>
        <name>AddUInt64</name>
        <param>
          <type>uint64_t</type>
          <declname>operand1</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>operand2</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.hpp" line="133" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.hpp" bodystart="133" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1ae5181e8e294375bba17579f41f44f039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>InputModFactor</declname>
            <defname>InputModFactor</defname>
          </param>
        </templateparamlist>
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::ReduceMod</definition>
        <argsstring>(uint64_t x, uint64_t modulus, const uint64_t *twice_modulus=nullptr, const uint64_t *four_times_modulus=nullptr)</argsstring>
        <name>ReduceMod</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <param>
          <type>const uint64_t *</type>
          <declname>twice_modulus</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const uint64_t *</type>
          <declname>four_times_modulus</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.hpp" line="157" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/ntt.hpp" bodystart="157" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1aab7d7acb16b2a22388513ae84818214c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacehetest_1_1utils_1ac7fa0c35a418955522dc45b10864fdc8" kindref="member">CMPINT</ref></type>
        <definition>CMPINT hetest::utils::Not</definition>
        <argsstring>(CMPINT cmp)</argsstring>
        <name>Not</name>
        <param>
          <type><ref refid="namespacehetest_1_1utils_1ac7fa0c35a418955522dc45b10864fdc8" kindref="member">CMPINT</ref></type>
          <declname>cmp</declname>
        </param>
        <briefdescription>
<para>Returns the logical negation of a binary operation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cmp</parametername>
</parameternamelist>
<parameterdescription>
<para>The binary operation to negate </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="39" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="39" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1af38bb2ec0ec65a229877d4a3bdbe787f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="utils-test_8hpp_1ab76ef99db23830c7fec1e3019737cab4" kindref="member">uint128_t</ref></type>
        <definition>uint128_t hetest::utils::MultiplyUInt64</definition>
        <argsstring>(uint64_t x, uint64_t y)</argsstring>
        <name>MultiplyUInt64</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="93" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a842729d820bda62d95f80ebdde202ac6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::BarrettReduce128</definition>
        <argsstring>(uint64_t input_hi, uint64_t input_lo, uint64_t modulus)</argsstring>
        <name>BarrettReduce128</name>
        <param>
          <type>uint64_t</type>
          <declname>input_hi</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>input_lo</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>modulus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="97" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="97" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a8c18008a708b9e3146f8c5bb95317415" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::DivideUInt128UInt64Lo</definition>
        <argsstring>(uint64_t x1, uint64_t x0, uint64_t y)</argsstring>
        <name>DivideUInt128UInt64Lo</name>
        <param>
          <type>uint64_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="108" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="108" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a8329306e8a458a7ce160ef870e59a9a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hetest::utils::MultiplyUInt64</definition>
        <argsstring>(uint64_t x, uint64_t y, uint64_t *prod_hi, uint64_t *prod_lo)</argsstring>
        <name>MultiplyUInt64</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>prod_hi</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>prod_lo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="119" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="119" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a625cc618050dc0a7fe3fc1720224018b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>BitShift</declname>
            <defname>BitShift</defname>
          </param>
        </templateparamlist>
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::MultiplyUInt64Hi</definition>
        <argsstring>(uint64_t x, uint64_t y)</argsstring>
        <name>MultiplyUInt64Hi</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="128" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a5f70a68d72b65afc296c5d38def31235" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::MSB</definition>
        <argsstring>(uint64_t input)</argsstring>
        <name>MSB</name>
        <param>
          <type>uint64_t</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="134" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1abde8eb855b18fb857dbbd7b06d96fd66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hetest::utils::Compare</definition>
        <argsstring>(CMPINT cmp, uint64_t lhs, uint64_t rhs)</argsstring>
        <name>Compare</name>
        <param>
          <type><ref refid="namespacehetest_1_1utils_1ac7fa0c35a418955522dc45b10864fdc8" kindref="member">CMPINT</ref></type>
          <declname>cmp</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="144" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="144" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a968364009ecc6add3849c161d7a1088f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hetest::utils::IsPowerOfTwo</definition>
        <argsstring>(uint64_t num)</argsstring>
        <name>IsPowerOfTwo</name>
        <param>
          <type>uint64_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="173" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1acb4bd5dad64e6c1db0f2b4e1afaa63db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::Log2</definition>
        <argsstring>(uint64_t x)</argsstring>
        <name>Log2</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="176" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="namespacehetest_1_1utils_1a959fdf1d396b9b4f4362486106e7f655" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hetest::utils::MaximumValue</definition>
        <argsstring>(uint64_t bits)</argsstring>
        <name>MaximumValue</name>
        <param>
          <type>uint64_t</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="182" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="182" bodyend="188"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ymeng12/he-fpga-github/tests/test_fwd_ntt.cpp" line="14" column="1"/>
  </compounddef>
</doxygen>
