name: ci

on:
  # By default this will run when the activity type is "opened", "synchronize",
  # or "reopened".
  pull_request:
    branches:
      - development
      - main
      - "[0-9]+.[0-9]+" # Run on release branch, e.g. 1.0
  # Run when protected branches are pushed to, e.g. via merge
  push:
    branches:
      - development
      - main
      - "[0-9]+.[0-9]+" # Run on release branch, e.g. 1.0
  workflow_dispatch:

defaults:
  run:
    shell: bash -il -eo pipefail {0}

jobs:
  run_ci:
    runs-on: [self-hosted, fpga]

    steps:
      - name: checkout_repo
        uses: actions/checkout@v2


      - name: pre-commit
        run: pre-commit run --all-files

      - name: show_details
        run: |
          echo 'pwd'
          pwd
          echo 'whoami'
          whoami
          echo 'hostname'
          hostname

      - name: build_he-fpga
        run: |
          source /opt/intel/oneapi/setvars.sh
          rm -rf build
          rm -rf hexl-fpga-install
          mkdir build
          cmake -S . -B build -DCMAKE_INSTALL_PREFIX=hexl-fpga-install -DCMAKE_BUILD_TYPE=Release  -DENABLE_FPGA_DEBUG=OFF -DENABLE_TESTS=ON -DENABLE_BENCHMARK=ON -DEMULATION_LIB=ON
          cmake --build build --target hexl-fpga -j

      - name: build_emulation
        run: |
          source /opt/intel/oneapi/setvars.sh
          cmake --build build --target emulation -j


      - name: build_install
        run: |
          cmake --install build

      - name: run_test_fpga
        run: |
          source /opt/intel/oneapi/setvars.sh
          export FPGA_DATA_DIR="/disk1/hexl-fpga-data-oneapi"
          export KEYSWITCH_DATA_DIR="${FPGA_DATA_DIR}/test-vectors"
          export RUN_CHOICE=2
          export FPGA_BITSTREAM_DIR="${FPGA_DATA_DIR}/bitstreams"
          cmake --build build --target tests
      
      - name: run_test_emu
        run: |
          source /opt/intel/oneapi/setvars.sh
          export FPGA_DATA_DIR="/disk1/hexl-fpga-data-oneapi"
          export KEYSWITCH_DATA_DIR="${FPGA_DATA_DIR}/test-vectors"
          export RUN_CHOICE=1
          cmake --build build --target tests

      - name: run_bench_fpga
        run: |
          source /opt/intel/oneapi/setvars.sh
          export FPGA_DATA_DIR="/disk1/hexl-fpga-data-oneapi"
          export FPGA_BITSTREAM_DIR="${FPGA_DATA_DIR}/bitstreams"
          export KEYSWITCH_DATA_DIR="${FPGA_DATA_DIR}/test-vectors"
          echo "Run benchmark with hardware bitstream"
          cmake --build build --target bench

      - name: build_examples
        run: |
          source /opt/intel/oneapi/setvars.sh
          mkdir build-examples
          cmake -S ./examples -B ./build-examples -DCMAKE_PREFIX_PATH=$(realpath .)/hexl-fpga-install/lib/cmake/ -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=dpcpp
          cmake --build build-examples

      - name: run_examples_fpga
        run: |
          source /opt/intel/oneapi/setvars.sh
          aocl initialize acl0 pac_s10_usm
          export FPGA_DATA_DIR="/disk1/hexl-fpga-data-oneapi"
          export FPGA_KERNEL=DYADIC_MULTIPLY
          export FPGA_BITSTREAM="${FPGA_DATA_DIR}/bitstreams/libdyadic_multiply.so"
          export RUN_CHOICE=2
          cd build-examples
          make examples

      - name: build_experimental_bridges
        run: |
          pushd experimental/bridge-seal
          cmake -S . -B build-seal4.0.0-fpga -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="$(realpath ${PWD}/../../build/install)" -DCMAKE_INSTALL_PREFIX=seal-fpga-install
          cmake --build build-seal4.0.0-fpga -j
          popd

      - name: build_seal_based_test
        run: |
          pushd experimental/bridge-seal/tests
          cmake -S . -B build -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="$(realpath ${PWD}/../../../hexl-fpga-install);$(realpath ${PWD}/../seal-fpga-install)" -DEMULATION_LIB=ON
          cmake --build build -j
          popd

      - name: run_experimental_tests
        run: |
          source /opt/intel/oneapi/setvars.sh
          pushd experimental/bridge-seal/tests/build
          echo "Run experimental tests with FPGA bitstream"
          export FPGA_DATA_DIR="/disk1/hexl-fpga-data-oneapi"
          export FPGA_BITSTREAM_DIR="${FPGA_DATA_DIR}/bitstreams"
          RUN_CHOICE=2 make seal_test
          echo "Run experimental tests with emulation"
          export FPGA_BITSTREAM_DIR=
          RUN_CHOICE=1 make seal_test
          popd
