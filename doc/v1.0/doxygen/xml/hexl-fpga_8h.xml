<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="hexl-fpga_8h" kind="file">
    <compoundname>hexl-fpga.h</compoundname>
    <includes local="no">cstdint</includes>
    <includedby refid="example__dyadic__multiply_8cpp" local="yes">example_dyadic_multiply.cpp</includedby>
    <includedby refid="examples_8cpp" local="yes">examples.cpp</includedby>
    <includedby refid="tests_2fpga__context_8h" local="yes">fpga_context.h</includedby>
    <includedby refid="test__dyadic__multiply_8cpp" local="yes">test_dyadic_multiply.cpp</includedby>
    <includedby refid="test__fwd__ntt_8cpp" local="yes">test_fwd_ntt.cpp</includedby>
    <includedby refid="test__hexl__fpga_8cpp" local="yes">test_hexl_fpga.cpp</includedby>
    <includedby refid="test__inv__ntt_8cpp" local="yes">test_inv_ntt.cpp</includedby>
    <includedby refid="bench__dyadic__multiply_8cpp" local="yes">bench_dyadic_multiply.cpp</includedby>
    <includedby refid="bench__fwd__ntt_8cpp" local="yes">bench_fwd_ntt.cpp</includedby>
    <includedby refid="bench__inv__ntt_8cpp" local="yes">bench_inv_ntt.cpp</includedby>
    <includedby refid="benchmark_2main_8cpp" local="yes">main.cpp</includedby>
    <incdepgraph>
      <node id="70">
        <label>cstdint</label>
      </node>
      <node id="69">
        <label>hexl-fpga.h</label>
        <link refid="hexl-fpga.h"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="81">
        <label>bench_fwd_ntt.cpp</label>
        <link refid="bench__fwd__ntt_8cpp"/>
      </node>
      <node id="82">
        <label>bench_inv_ntt.cpp</label>
        <link refid="bench__inv__ntt_8cpp"/>
      </node>
      <node id="83">
        <label>main.cpp</label>
        <link refid="benchmark_2main_8cpp"/>
      </node>
      <node id="80">
        <label>bench_dyadic_multiply.cpp</label>
        <link refid="bench__dyadic__multiply_8cpp"/>
      </node>
      <node id="78">
        <label>test_hexl_fpga.cpp</label>
        <link refid="test__hexl__fpga_8cpp"/>
      </node>
      <node id="79">
        <label>test_inv_ntt.cpp</label>
        <link refid="test__inv__ntt_8cpp"/>
      </node>
      <node id="77">
        <label>test_fwd_ntt.cpp</label>
        <link refid="test__fwd__ntt_8cpp"/>
      </node>
      <node id="72">
        <label>example_dyadic_multiply.cpp</label>
        <link refid="example__dyadic__multiply_8cpp"/>
      </node>
      <node id="71">
        <label>hexl-fpga.h</label>
        <link refid="hexl-fpga.h"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>examples.cpp</label>
        <link refid="examples_8cpp"/>
      </node>
      <node id="76">
        <label>test_dyadic_multiply.cpp</label>
        <link refid="test__dyadic__multiply_8cpp"/>
      </node>
      <node id="75">
        <label>main.cpp</label>
        <link refid="tests_2main_8cpp"/>
      </node>
      <node id="74">
        <label>fpga_context.h</label>
        <link refid="tests_2fpga__context_8h"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceintel">intel</innernamespace>
    <innernamespace refid="namespaceintel_1_1hexl">intel::hexl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2020-2021<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__HEXL_FPGA_H__</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__HEXL_FPGA_H__</highlight></codeline>
<codeline lineno="6"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">intel<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hexl<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a6236e14eaac1602475c5f4e0a42754fe" kindref="member">acquire_FPGA_resources</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a717589c6dbfa6429b61e42c620d72d89" kindref="member">release_FPGA_resources</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DyadicMultiply<sp/>Section</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a0721fea3151425a86da2201107e3ddcc" kindref="member">set_worksize_DyadicMultiply</ref>(uint64_t<sp/>ws);</highlight></codeline>
<codeline lineno="41"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1ae4e26f2cb97a43a2b81fe8643b6edf17" kindref="member">DyadicMultiply</ref>(uint64_t*<sp/>results,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>operand1,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>operand2,<sp/>uint64_t<sp/>n,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>moduli,<sp/>uint64_t<sp/>n_moduli);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a638ef00009ae573955d1138b9fb03363" kindref="member">DyadicMultiplyCompleted</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NTT<sp/>Section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1af64feb2684e5467b69273aeb64d73b32" kindref="member">set_worksize_NTT</ref>(uint64_t<sp/>ws);</highlight></codeline>
<codeline lineno="73"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1aba58174859e0cfb87d493606a9e8a530" kindref="member">NTT</ref>(uint64_t*<sp/>operand,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>root_of_unity_powers,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>precon_root_of_unity_powers,<sp/>uint64_t<sp/>coeff_modulus,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>n);</highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1abeacc492f814f3fdf8659bd8067dc732" kindref="member">NTTCompleted</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTT<sp/>Section</highlight></codeline>
<codeline lineno="89"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a5fd09ace83ab47ba6d55eb4fde0973d8" kindref="member">set_worksize_INTT</ref>(uint64_t<sp/>ws);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1add1b2b65fe1dc30cfd2683dfb6f4dde6" kindref="member">INTT</ref>(uint64_t*<sp/>operand,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>inv_root_of_unity_powers,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t*<sp/>precon_inv_root_of_unity_powers,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>coeff_modulus,<sp/>uint64_t<sp/>inv_n,<sp/>uint64_t<sp/>inv_n_w,<sp/>uint64_t<sp/>n);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceintel_1_1hexl_1a87e4fb9429d04f09bbb0de8497aab0f7" kindref="member">INTTCompleted</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hexl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>intel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ymeng12/he-fpga-github/host/inc/hexl-fpga.h"/>
  </compounddef>
</doxygen>
