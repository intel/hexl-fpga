<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classhetest_1_1utils_1_1AlignedAllocator" kind="class" prot="public">
    <compoundname>hetest::utils::AlignedAllocator</compoundname>
    <includes refid="utils-test_8hpp" local="no">utils-test.hpp</includes>
    <innerclass refid="structhetest_1_1utils_1_1AlignedAllocator_1_1rebind" prot="public">hetest::utils::AlignedAllocator::rebind</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>uint64_t</type>
        <declname>Alignment</declname>
        <defname>Alignment</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhetest_1_1utils_1_1AlignedAllocator_1a1de3067f7171cca11e5c3cd10b508998" prot="public" static="no">
        <type>T</type>
        <definition>using hetest::utils::AlignedAllocator&lt; T, Alignment &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="286" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classhetest_1_1utils_1_1AlignedAllocator_1aaded07599020ca35e89e078674263c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
          </param>
          <param>
            <type>uint64_t</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class AlignedAllocator</definition>
        <argsstring></argsstring>
        <name>AlignedAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="284" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhetest_1_1utils_1_1AlignedAllocator_1ae422eefcd5b4b3766ee53be6a5b1b429" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehetest_1_1utils_1a3f7f347b9f62a88014bdcc45f7987846" kindref="member">AllocatorStrategyPtr</ref></type>
        <definition>AllocatorStrategyPtr hetest::utils::AlignedAllocator&lt; T, Alignment &gt;::m_alloc_impl</definition>
        <argsstring></argsstring>
        <name>m_alloc_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="348" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="348" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhetest_1_1utils_1_1AlignedAllocator_1af66cd2d6a02b27e18ba02ffc3a345544" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hetest::utils::AlignedAllocator&lt; T, Alignment &gt;::AlignedAllocator</definition>
        <argsstring>(AllocatorStrategyPtr strategy=nullptr) noexcept</argsstring>
        <name>AlignedAllocator</name>
        <param>
          <type><ref refid="namespacehetest_1_1utils_1a3f7f347b9f62a88014bdcc45f7987846" kindref="member">AllocatorStrategyPtr</ref></type>
          <declname>strategy</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="288" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="288" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classhetest_1_1utils_1_1AlignedAllocator_1a71bdbfb1ae4ac672c4a0dc4e7504e195" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hetest::utils::AlignedAllocator&lt; T, Alignment &gt;::AlignedAllocator</definition>
        <argsstring>(const AlignedAllocator &amp;src)</argsstring>
        <name>AlignedAllocator</name>
        <param>
          <type>const <ref refid="classhetest_1_1utils_1_1AlignedAllocator" kindref="compound">AlignedAllocator</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="291" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="291" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classhetest_1_1utils_1_1AlignedAllocator_1a3a1080fe5c9e4be3d73da338835c9fa7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>hetest::utils::AlignedAllocator&lt; T, Alignment &gt;::AlignedAllocator</definition>
        <argsstring>(const AlignedAllocator&lt; U, Alignment &gt; &amp;src)</argsstring>
        <name>AlignedAllocator</name>
        <param>
          <type>const <ref refid="classhetest_1_1utils_1_1AlignedAllocator" kindref="compound">AlignedAllocator</ref>&lt; U, Alignment &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="295" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="295" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classhetest_1_1utils_1_1AlignedAllocator_1a0d84644228d98daf2407ff6046ceca5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hetest::utils::AlignedAllocator&lt; T, Alignment &gt;::~AlignedAllocator</definition>
        <argsstring>()</argsstring>
        <name>~AlignedAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="298" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classhetest_1_1utils_1_1AlignedAllocator_1a9e7374df3ec465f1b2e522f5e7c57ee0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hetest::utils::AlignedAllocator&lt; T, Alignment &gt;::operator==</definition>
        <argsstring>(const AlignedAllocator &amp;)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classhetest_1_1utils_1_1AlignedAllocator" kindref="compound">AlignedAllocator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="305" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="305" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classhetest_1_1utils_1_1AlignedAllocator_1ab17ae365e2e63a0b1c27c5b194b0dbf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hetest::utils::AlignedAllocator&lt; T, Alignment &gt;::operator!=</definition>
        <argsstring>(const AlignedAllocator &amp;)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classhetest_1_1utils_1_1AlignedAllocator" kindref="compound">AlignedAllocator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="307" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="307" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classhetest_1_1utils_1_1AlignedAllocator_1a3d9f851ef4ffdbd83936f1810e53752d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* hetest::utils::AlignedAllocator&lt; T, Alignment &gt;::allocate</definition>
        <argsstring>(size_t n)</argsstring>
        <name>allocate</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="309" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="309" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classhetest_1_1utils_1_1AlignedAllocator_1a109a8cc9e6c49b75382f9c019b04ba03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hetest::utils::AlignedAllocator&lt; T, Alignment &gt;::deallocate</definition>
        <argsstring>(T *p, size_t n)</argsstring>
        <name>deallocate</name>
        <param>
          <type>T *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="338" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="338" bodyend="345"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" line="281" column="1" bodyfile="/home/ymeng12/he-fpga-github/tests/test_utils/utils-test.hpp" bodystart="281" bodyend="349"/>
    <listofallmembers>
      <member refid="classhetest_1_1utils_1_1AlignedAllocator_1aaded07599020ca35e89e078674263c63" prot="public" virt="non-virtual"><scope>hetest::utils::AlignedAllocator</scope><name>AlignedAllocator</name></member>
      <member refid="classhetest_1_1utils_1_1AlignedAllocator_1af66cd2d6a02b27e18ba02ffc3a345544" prot="public" virt="non-virtual"><scope>hetest::utils::AlignedAllocator</scope><name>AlignedAllocator</name></member>
      <member refid="classhetest_1_1utils_1_1AlignedAllocator_1a71bdbfb1ae4ac672c4a0dc4e7504e195" prot="public" virt="non-virtual"><scope>hetest::utils::AlignedAllocator</scope><name>AlignedAllocator</name></member>
      <member refid="classhetest_1_1utils_1_1AlignedAllocator_1a3a1080fe5c9e4be3d73da338835c9fa7" prot="public" virt="non-virtual"><scope>hetest::utils::AlignedAllocator</scope><name>AlignedAllocator</name></member>
      <member refid="classhetest_1_1utils_1_1AlignedAllocator_1a3d9f851ef4ffdbd83936f1810e53752d" prot="public" virt="non-virtual"><scope>hetest::utils::AlignedAllocator</scope><name>allocate</name></member>
      <member refid="classhetest_1_1utils_1_1AlignedAllocator_1a109a8cc9e6c49b75382f9c019b04ba03" prot="public" virt="non-virtual"><scope>hetest::utils::AlignedAllocator</scope><name>deallocate</name></member>
      <member refid="classhetest_1_1utils_1_1AlignedAllocator_1ae422eefcd5b4b3766ee53be6a5b1b429" prot="private" virt="non-virtual"><scope>hetest::utils::AlignedAllocator</scope><name>m_alloc_impl</name></member>
      <member refid="classhetest_1_1utils_1_1AlignedAllocator_1ab17ae365e2e63a0b1c27c5b194b0dbf1" prot="public" virt="non-virtual"><scope>hetest::utils::AlignedAllocator</scope><name>operator!=</name></member>
      <member refid="classhetest_1_1utils_1_1AlignedAllocator_1a9e7374df3ec465f1b2e522f5e7c57ee0" prot="public" virt="non-virtual"><scope>hetest::utils::AlignedAllocator</scope><name>operator==</name></member>
      <member refid="classhetest_1_1utils_1_1AlignedAllocator_1a1de3067f7171cca11e5c3cd10b508998" prot="public" virt="non-virtual"><scope>hetest::utils::AlignedAllocator</scope><name>value_type</name></member>
      <member refid="classhetest_1_1utils_1_1AlignedAllocator_1a0d84644228d98daf2407ff6046ceca5a" prot="public" virt="non-virtual"><scope>hetest::utils::AlignedAllocator</scope><name>~AlignedAllocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
